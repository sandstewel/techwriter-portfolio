<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ðŸ§© Open API Specification on Altus Booysen</title>
    <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/</link>
    <description>Recent content in ðŸ§© Open API Specification on Altus Booysen</description>
    <generator>Hugo -- 0.147.5</generator>
    <language>en-us</language>
    <atom:link href="https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Petstore</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/petstore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/petstore/</guid>
      <description>&lt;p&gt;A sample API demonstrating common operations for managing pets, including adding, updating, and retrieving pet information.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/petstore.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
    <item>
      <title>To Do List</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/task/</guid>
      <description>&lt;p&gt;An API for managing tasks and to-do items, allowing users to create, update, complete, and delete tasks.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/openapi-todo.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
    <item>
      <title>User</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/user/</guid>
      <description>&lt;p&gt;An API for user account management, including user registration, authentication, profile updates, and user data retrieval.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/openapi-user.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
