<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>API on Altus Booysen</title>
    <link>https://sandstewel.github.io/techwriter-portfolio/tags/api/</link>
    <description>Recent content in API on Altus Booysen</description>
    <generator>Hugo -- 0.147.5</generator>
    <language>en-us</language>
    <atom:link href="https://sandstewel.github.io/techwriter-portfolio/tags/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>User Overview</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/overview/</guid>
      <description>An test documentation sample</description>
    </item>
    <item>
      <title>The User Object</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/the-user-object/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/the-user-object/</guid>
      <description>&lt;h2 id=&#34;the-user-object&#34;&gt;The User object&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Field&lt;/th&gt;
          &lt;th&gt;Type&lt;/th&gt;
          &lt;th&gt;Required&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;Unique identifier for the user.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;Full name of the user.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;email&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;Email address of the user.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;created_at&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
          &lt;td&gt;Timestamp when the user was created (ISO 8601).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;updated_at&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
          &lt;td&gt;Timestamp when the user was last updated.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
          &lt;td&gt;User status (e.g., &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;inactive&lt;/code&gt;).&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{
  &amp;#34;id&amp;#34;: &amp;#34;12345&amp;#34;,
  &amp;#34;name&amp;#34;: &amp;#34;Jane Doe&amp;#34;,
  &amp;#34;email&amp;#34;: &amp;#34;jane.doe@example.com&amp;#34;,
  &amp;#34;created_at&amp;#34;: &amp;#34;2025-06-01T12:00:00Z&amp;#34;,
  &amp;#34;updated_at&amp;#34;: &amp;#34;2025-06-07T08:30:00Z&amp;#34;,
  &amp;#34;status&amp;#34;: &amp;#34;active&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Create a User</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/create-a-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/api-reference/create-a-user/</guid>
      <description>&lt;h2 id=&#34;-create-a-user&#34;&gt;ðŸ†• Create a User&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt; &lt;code&gt;/v1/users&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use this endpoint to create a new user in the system.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-request-headers&#34;&gt;ðŸ”¸ Request Headers&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Header&lt;/th&gt;
          &lt;th&gt;Value&lt;/th&gt;
          &lt;th&gt;Required&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Bearer YOUR_API_TOKEN&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;âœ…&lt;/td&gt;
          &lt;td&gt;Your API access token&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;âœ…&lt;/td&gt;
          &lt;td&gt;Request body content type&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-request-body-parameters&#34;&gt;ðŸ“¥ Request Body Parameters&lt;/h3&gt;
&lt;p&gt;Send a JSON object with the following fields:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Field&lt;/th&gt;
          &lt;th&gt;Type&lt;/th&gt;
          &lt;th&gt;Required&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;âœ…&lt;/td&gt;
          &lt;td&gt;Full name of the user&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;email&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;âœ…&lt;/td&gt;
          &lt;td&gt;Email address of the user&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;string&lt;/td&gt;
          &lt;td&gt;âœ…&lt;/td&gt;
          &lt;td&gt;Password for the new user&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-example-curl-request&#34;&gt;âœ… Example cURL Request&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -X POST https://api.example.com/v1/users &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Authorization: Bearer YOUR_API_TOKEN&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;name&amp;#34;: &amp;#34;John Smith&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;email&amp;#34;: &amp;#34;john.smith@example.com&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;password&amp;#34;: &amp;#34;securePassword123&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Petstore</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/petstore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/petstore/</guid>
      <description>&lt;p&gt;A sample API demonstrating common operations for managing pets, including adding, updating, and retrieving pet information.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/petstore.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
    <item>
      <title>To Do List</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/task/</guid>
      <description>&lt;p&gt;An API for managing tasks and to-do items, allowing users to create, update, complete, and delete tasks.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/openapi-todo.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
    <item>
      <title>User</title>
      <link>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sandstewel.github.io/techwriter-portfolio/portfolio/api-docs/openapi-spec/user/</guid>
      <description>&lt;p&gt;An API for user account management, including user registration, authentication, profile updates, and user data retrieval.&lt;/p&gt;
&lt;div class=&#34;swagger-container&#34;&gt;
  &lt;div id=&#34;swagger-ui&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/swagger-ui-dist/swagger-ui-standalone-preset.js&#34;&gt;&lt;/script&gt;

&lt;script&gt;
window.onload = function() {
  const specUrl = &#39;\/techwriter-portfolio\/openapi-user.yaml&#39;;
  const ui = SwaggerUIBundle({
    url: specUrl,
    dom_id: &#39;#swagger-ui&#39;,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    layout: &#34;StandaloneLayout&#34;,
    docExpansion: &#34;none&#34;
  });
  window.ui = ui;

  
  setTimeout(() =&gt; {
    document.querySelectorAll(&#39;.btn-clipboard&#39;).forEach(button =&gt; {
      button.addEventListener(&#39;click&#39;, async () =&gt; {
        const codeBlock = button.closest(&#39;.highlight&#39;) || button.closest(&#39;pre&#39;);
        if (!codeBlock) return;
        try {
          const text = codeBlock.innerText || codeBlock.textContent;
          await navigator.clipboard.writeText(text.trim());
          button.innerText = &#39;Copied!&#39;;
          setTimeout(() =&gt; (button.innerText = &#39;Copy&#39;), 2000);
        } catch (err) {
          console.error(&#39;Copy failed:&#39;, err);
          button.innerText = &#39;Failed&#39;;
        }
      });
    });
  }, 1000);
};
&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
